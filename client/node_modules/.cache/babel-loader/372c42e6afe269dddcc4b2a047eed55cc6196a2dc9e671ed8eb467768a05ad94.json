{"ast":null,"code":"import _objectSpread from\"/home/taito/dev/task-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/taito/dev/task-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/taito/dev/task-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./App.css';import{NewTaskForm}from'./components/NewTaskForm';import{TaskList}from'./components/TaskList';import{v1 as uuidv1}from'uuid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];function addTask(e){setTasks([].concat(_toConsumableArray(tasks),[{id:uuidv1(),title:task,completed:false}]));}function deleteTask(id){setTasks(function(currentTasks){return currentTasks.filter(function(task){return task.id!==id;});});}function editTask(id,title){setTasks(function(currentTasks){return currentTasks.map(function(task){if(task.id===id){return _objectSpread(_objectSpread({},task),{},{title:title});}return task;});});}function toggleCompleted(id,completed){setTasks(function(currentTasks){return currentTasks.map(function(task){if(task.id===id){return _objectSpread(_objectSpread({},task),{},{completed:completed});}return task;});});}console.log(tasks);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TaskApp\"}),/*#__PURE__*/_jsx(NewTaskForm,{task:task,setTask:setTask,addTask:addTask}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,setTasks:setTasks,toggleCompleted:toggleCompleted,deleteTask:deleteTask,editTask:editTask})]});}export default App;","map":{"version":3,"names":["useState","NewTaskForm","TaskList","v1","uuidv1","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","task","setTask","_useState3","_useState4","tasks","setTasks","addTask","e","concat","_toConsumableArray","id","title","completed","deleteTask","currentTasks","filter","editTask","map","_objectSpread","toggleCompleted","console","log","className","children"],"sources":["/home/taito/dev/task-app/client/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport { NewTaskForm } from './components/NewTaskForm';\nimport { TaskList } from './components/TaskList';\nimport { Task } from './model';\nimport { v1 as uuidv1 } from 'uuid';\n\nfunction App() {\n    const [task, setTask] = useState(\"\");\n    const [tasks, setTasks] = useState<Task[]>([]);\n\n    function addTask(e: React.FormEvent) {\n        setTasks([...tasks, { id: uuidv1(), title: task, completed: false }]);\n    }\n\n    function deleteTask(id: string) {\n        setTasks((currentTasks) => {\n            return currentTasks.filter((task) => task.id !== id);\n        })\n    }\n\n    function editTask(id: string, title: string) {\n        setTasks((currentTasks) => {\n            return currentTasks.map((task) => {\n                if (task.id === id) {\n                    return { ...task, title };\n                }\n                return task;\n            });\n        });\n    }\n\n    function toggleCompleted(id: string, completed: boolean) {\n        setTasks((currentTasks) => {\n            return currentTasks.map((task) => {\n                if (task.id === id) {\n                    return { ...task, completed };\n                }\n                return task;\n            });\n        });\n    }\n    console.log(tasks);\n    return (\n        <div className=\"App\">\n            <h1>TaskApp</h1>\n            <NewTaskForm task={task} setTask={setTask} addTask={addTask} />\n            <TaskList tasks={tasks} setTasks={setTasks} toggleCompleted={toggleCompleted} deleteTask={deleteTask} editTask={editTask} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"sWAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,OAASC,WAAW,KAAQ,0BAA0B,CACtD,OAASC,QAAQ,KAAQ,uBAAuB,CAEhD,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,IAAAC,SAAA,CAAwBV,QAAQ,CAAC,EAAE,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA0Bf,QAAQ,CAAS,EAAE,CAAC,CAAAgB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,QAAS,CAAAG,OAAOA,CAACC,CAAkB,CAAE,CACjCF,QAAQ,IAAAG,MAAA,CAAAC,kBAAA,CAAKL,KAAK,GAAE,CAAEM,EAAE,CAAEnB,MAAM,CAAC,CAAC,CAAEoB,KAAK,CAAEX,IAAI,CAAEY,SAAS,CAAE,KAAM,CAAC,EAAC,CAAC,CACzE,CAEA,QAAS,CAAAC,UAAUA,CAACH,EAAU,CAAE,CAC5BL,QAAQ,CAAC,SAACS,YAAY,CAAK,CACvB,MAAO,CAAAA,YAAY,CAACC,MAAM,CAAC,SAACf,IAAI,QAAK,CAAAA,IAAI,CAACU,EAAE,GAAKA,EAAE,GAAC,CACxD,CAAC,CAAC,CACN,CAEA,QAAS,CAAAM,QAAQA,CAACN,EAAU,CAAEC,KAAa,CAAE,CACzCN,QAAQ,CAAC,SAACS,YAAY,CAAK,CACvB,MAAO,CAAAA,YAAY,CAACG,GAAG,CAAC,SAACjB,IAAI,CAAK,CAC9B,GAAIA,IAAI,CAACU,EAAE,GAAKA,EAAE,CAAE,CAChB,OAAAQ,aAAA,CAAAA,aAAA,IAAYlB,IAAI,MAAEW,KAAK,CAALA,KAAK,GAC3B,CACA,MAAO,CAAAX,IAAI,CACf,CAAC,CAAC,CACN,CAAC,CAAC,CACN,CAEA,QAAS,CAAAmB,eAAeA,CAACT,EAAU,CAAEE,SAAkB,CAAE,CACrDP,QAAQ,CAAC,SAACS,YAAY,CAAK,CACvB,MAAO,CAAAA,YAAY,CAACG,GAAG,CAAC,SAACjB,IAAI,CAAK,CAC9B,GAAIA,IAAI,CAACU,EAAE,GAAKA,EAAE,CAAE,CAChB,OAAAQ,aAAA,CAAAA,aAAA,IAAYlB,IAAI,MAAEY,SAAS,CAATA,SAAS,GAC/B,CACA,MAAO,CAAAZ,IAAI,CACf,CAAC,CAAC,CACN,CAAC,CAAC,CACN,CACAoB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC,CAClB,mBACIT,KAAA,QAAK2B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAChB9B,IAAA,OAAA8B,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB9B,IAAA,CAACL,WAAW,EAACY,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAACK,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAC/Db,IAAA,CAACJ,QAAQ,EAACe,KAAK,CAAEA,KAAM,CAACC,QAAQ,CAAEA,QAAS,CAACc,eAAe,CAAEA,eAAgB,CAACN,UAAU,CAAEA,UAAW,CAACG,QAAQ,CAAEA,QAAS,CAAE,CAAC,EAC3H,CAAC,CAEd,CAEA,cAAe,CAAApB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}