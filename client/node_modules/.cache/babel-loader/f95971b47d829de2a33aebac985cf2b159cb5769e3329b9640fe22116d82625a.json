{"ast":null,"code":"var _jsxFileName = \"/home/taito/dev/task-app/client/src/components/TaskItem.tsx\",\n  _s2 = $RefreshSig$();\nimport { MdDelete } from 'react-icons/md';\nimport { useState, useRef } from 'react';\nimport { MdEdit } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskItem({\n  id,\n  title,\n  completed,\n  toggleCompleted,\n  deleteTask,\n  editTask\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [editing, setEditing] = useState(false);\n  const ref = useRef(null);\n  const UseFocus = () => {\n    _s();\n    const htmlElRef = useRef(null);\n    const setFocus = () => {\n      htmlElRef.current && htmlElRef.current.focus();\n    };\n    return [htmlElRef, setFocus];\n  };\n  _s(UseFocus, \"sPMElNktqlbGoO1DmdgDOOzWQjQ=\");\n  let viewMode = {};\n  let editMode = {};\n  let completedStyle = {};\n  editing ? viewMode.display = 'none' : editMode.display = 'none';\n  completed ? completedStyle.textDecoration = 'line-through' : completedStyle.textDecoration = 'none';\n  function toggleEditing() {\n    if (editing) {\n      setEditing(false);\n    } else {\n      setEditing(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"task__checkbox\",\n        type: \"checkbox\",\n        checked: completed,\n        onChange: e => toggleCompleted(id, e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__title  task__title--view\",\n        style: viewMode,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: completedStyle,\n          onClick: () => toggleEditing(),\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__title task__title--edit\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"task__input\",\n          style: editMode,\n          type: \"text\",\n          autoFocus: true,\n          value: title,\n          onChange: e => editTask(id, e.target.value),\n          onKeyUp: e => {\n            if (e.key === 'Enter') setEditing(false);\n          },\n          onBlur: () => setEditing(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_buttons__edit\",\n          children: /*#__PURE__*/_jsxDEV(MdEdit, {\n            className: \"task__button task__button--edit\",\n            onClick: () => toggleEditing()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_buttons__delete\",\n          children: /*#__PURE__*/_jsxDEV(MdDelete, {\n            className: \"task__button task__button--delete\",\n            onClick: () => deleteTask(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s2(TaskItem, \"0bw2rHP4xPMZ4T4pAPuUStQYuYg=\");\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["MdDelete","useState","useRef","MdEdit","jsxDEV","_jsxDEV","TaskItem","id","title","completed","toggleCompleted","deleteTask","editTask","_s2","_s","$RefreshSig$","editing","setEditing","ref","UseFocus","htmlElRef","setFocus","current","focus","viewMode","editMode","completedStyle","display","textDecoration","toggleEditing","className","children","type","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","autoFocus","value","onKeyUp","key","onBlur","_c","$RefreshReg$"],"sources":["/home/taito/dev/task-app/client/src/components/TaskItem.tsx"],"sourcesContent":["import { MdDelete } from 'react-icons/md';\nimport CSS from 'csstype';\nimport { useState, useRef } from 'react';\nimport { MdEdit } from 'react-icons/md';\n\ninterface Props {\n    id: string;\n    title: string;\n    completed: boolean;\n    toggleCompleted: (id: string, completed: boolean) => void;\n    deleteTask: (id: string) => void;\n    editTask: (id: string, newTitle: string) => void;\n}\n\nexport function TaskItem({ id, title, completed, toggleCompleted, deleteTask, editTask }: Props) {\n\n    const [editing, setEditing] = useState(false);\n    const ref = useRef<HTMLInputElement | null>(null);\nconst UseFocus = () => {\n\tconst htmlElRef = useRef(null)\n\tconst setFocus = () => {htmlElRef.current &&  htmlElRef.current.focus()}\n\n\treturn [ htmlElRef,  setFocus ] \n}\n    let viewMode: CSS.Properties = {};\n    let editMode: CSS.Properties = {};\n    let completedStyle: CSS.Properties = {};\n\n    (editing) ? viewMode.display = 'none' : editMode.display = 'none';\n    (completed) ? completedStyle.textDecoration = 'line-through' : completedStyle.textDecoration = 'none';\n\n    function toggleEditing() {\n        if (editing) {\n            setEditing(false);\n        } else {\n            setEditing(true);\n        }\n    }\n\n    return (\n        <div className=\"task\">\n            <li>\n                <input\n                    className=\"task__checkbox\"\n                    type=\"checkbox\"\n                    checked={completed}\n                    onChange={(e) => toggleCompleted(id, e.target.checked)} />\n                <div className=\"task__title  task__title--view\" style={viewMode}>\n                    <span style={completedStyle} onClick={() => toggleEditing()}>{title}</span>\n                </div>\n                <div className=\"task__title task__title--edit\">\n                    <input\n                        className=\"task__input\"\n                        style={editMode}\n                        type=\"text\"\n                        autoFocus\n                        value={title}\n                        onChange={(e) => editTask(id, e.target.value)}\n                        onKeyUp={(e) => { if (e.key === 'Enter') setEditing(false) }}\n                        onBlur={() => setEditing(false)} />\n                </div>\n                <div className=\"task__buttons\">\n                    <div className=\"task_buttons__edit\">\n                        <MdEdit className=\"task__button task__button--edit\" onClick={() => toggleEditing()} />\n                    </div>\n                    <div className=\"task_buttons__delete\">\n                        <MdDelete className=\"task__button task__button--delete\" onClick={() => deleteTask(id)} />\n                    </div>\n                </div>\n            </li>\n        </div>\n\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}