{"ast":null,"code":"var _jsxFileName = \"/home/taito/dev/task-app/client/src/components/TaskItem.tsx\",\n  _s = $RefreshSig$();\nimport { MdDelete } from 'react-icons/md';\nimport { useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskItem({\n  id,\n  title,\n  completed,\n  toggleCompleted,\n  deleteTask,\n  editTask\n}) {\n  _s();\n  const [editing, setEditing] = useState(false);\n  let viewMode = {};\n  let editMode = {};\n  let completedStyle = {};\n  let completedItemStyle = {};\n  editing ? viewMode.display = 'none' : editMode.display = 'none';\n  if (completed) {\n    completedStyle.textDecoration = 'line-through';\n    completedItemStyle.backgroundColor = '#121212';\n  } else {\n    completedStyle.textDecoration = 'none';\n    completedItemStyle.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n  }\n  function toggleEditing() {\n    if (editing) {\n      setEditing(false);\n    } else {\n      setEditing(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    style: completedItemStyle,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"task__checkbox\",\n        type: \"checkbox\",\n        checked: completed,\n        onChange: e => toggleCompleted(id, e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__title  task__title--view\",\n        style: viewMode,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: completedStyle,\n          onClick: () => toggleEditing(),\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__title task__title--edit\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: input => input && input.focus(),\n          className: \"task__title--edit--input\",\n          style: editMode,\n          type: \"text\",\n          maxLength: 46,\n          value: title,\n          onChange: e => editTask(id, e.target.value),\n          onKeyUp: e => {\n            if (e.key === 'Enter') setEditing(false);\n          },\n          onBlur: () => setEditing(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_buttons__edit\",\n          children: /*#__PURE__*/_jsxDEV(MdEdit, {\n            className: \"task__button task__button--edit\",\n            onClick: () => toggleEditing()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task_buttons__delete\",\n          children: /*#__PURE__*/_jsxDEV(MdDelete, {\n            className: \"task__button task__button--delete\",\n            onClick: () => deleteTask(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskItem, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\");\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["MdDelete","useState","MdEdit","jsxDEV","_jsxDEV","TaskItem","id","title","completed","toggleCompleted","deleteTask","editTask","_s","editing","setEditing","viewMode","editMode","completedStyle","completedItemStyle","display","textDecoration","backgroundColor","toggleEditing","className","style","children","type","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","input","focus","maxLength","value","onKeyUp","key","onBlur","_c","$RefreshReg$"],"sources":["/home/taito/dev/task-app/client/src/components/TaskItem.tsx"],"sourcesContent":["import { MdDelete } from 'react-icons/md';\nimport CSS from 'csstype';\nimport { useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\n\ninterface Props {\n    id: string;\n    title: string;\n    completed: boolean;\n    toggleCompleted: (id: string, completed: boolean) => void;\n    deleteTask: (id: string) => void;\n    editTask: (id: string, newTitle: string) => void;\n}\n\nexport function TaskItem({ id, title, completed, toggleCompleted, deleteTask, editTask }: Props) {\n\n    const [editing, setEditing] = useState(false);\n\n    let viewMode: CSS.Properties = {};\n    let editMode: CSS.Properties = {};\n    let completedStyle: CSS.Properties = {};\n    let completedItemStyle: CSS.Properties = {};\n\n    (editing) ? viewMode.display = 'none' : editMode.display = 'none';\n    if (completed) {\n        completedStyle.textDecoration = 'line-through';\n        completedItemStyle.backgroundColor = '#121212';\n    } else {\n        completedStyle.textDecoration = 'none';\n        completedItemStyle.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n    }\n\n    function toggleEditing() {\n        if (editing) {\n            setEditing(false);\n        } else {\n            setEditing(true);\n        }\n    }\n\n    return (\n        <div className=\"task\" style={completedItemStyle}>\n            <li>\n                <input\n                    className=\"task__checkbox\"\n                    type=\"checkbox\"\n                    checked={completed}\n                    onChange={(e) => toggleCompleted(id, e.target.checked)} />\n                <div className=\"task__title  task__title--view\" style={viewMode}>\n                    <span style={completedStyle} onClick={() => toggleEditing()}>{title}</span>\n                </div>\n                <div className=\"task__title task__title--edit\">\n                    <input\n                        ref={input => input && input.focus()}\n                        className=\"task__title--edit--input\"\n                        style={editMode}\n                        type=\"text\"\n                        maxLength={46}\n                        value={title}\n                        onChange={(e) => editTask(id, e.target.value)}\n                        onKeyUp={(e) => { if (e.key === 'Enter') setEditing(false) }}\n                        onBlur={() => setEditing(false)} />\n                </div>\n                <div className=\"task__buttons\">\n                    <div className=\"task_buttons__edit\">\n                        <MdEdit className=\"task__button task__button--edit\" onClick={() => toggleEditing()} />\n                    </div>\n                    <div className=\"task_buttons__delete\">\n                        <MdDelete className=\"task__button task__button--delete\" onClick={() => deleteTask(id)} />\n                    </div>\n                </div>\n            </li>\n        </div>\n\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}