{"ast":null,"code":"var _jsxFileName = \"/home/taito/dev/task-app/client/src/components/TaskItem.tsx\",\n  _s = $RefreshSig$();\nimport { MdDelete } from 'react-icons/md';\nimport { useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskItem({\n  id,\n  title,\n  completed,\n  toggleCompleted,\n  deleteTask,\n  editTask\n}) {\n  _s();\n  const [editing, setEditing] = useState(false);\n  let viewMode = {};\n  let editMode = {};\n  function toggleEditing() {\n    if (editing) setEditing(false);else setEditing(true);\n  }\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n  console.log(editing);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-task\",\n        style: viewMode,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed,\n          onChange: e => toggleCompleted(id, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), title, /*#__PURE__*/_jsxDEV(MdEdit, {\n          onClick: () => toggleEditing()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MdDelete, {\n          onClick: () => deleteTask(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: editMode,\n        type: \"text\",\n        value: title,\n        onChange: e => editTask(id, e.target.value),\n        onKeyUp: e => {\n          if (e.key === 'Enter') setEditing(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskItem, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\");\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["MdDelete","useState","MdEdit","jsxDEV","_jsxDEV","TaskItem","id","title","completed","toggleCompleted","deleteTask","editTask","_s","editing","setEditing","viewMode","editMode","toggleEditing","display","console","log","children","className","style","type","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onKeyUp","key","_c","$RefreshReg$"],"sources":["/home/taito/dev/task-app/client/src/components/TaskItem.tsx"],"sourcesContent":["import { MdDelete } from 'react-icons/md';\nimport CSS from 'csstype';\nimport { useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\n\ninterface Props {\n    id: string;\n    title: string;\n    completed: boolean;\n    toggleCompleted: (id: string, completed: boolean) => void;\n    deleteTask: (id: string) => void;\n    editTask: (id: string, newTitle: string) => void;\n}\n\nexport function TaskItem({ id, title, completed, toggleCompleted, deleteTask, editTask }: Props) {\n\n    const [editing, setEditing] = useState(false);\n\n    let viewMode: CSS.Properties = {};\n    let editMode: CSS.Properties = {};\n\n    function toggleEditing() {\n        if (editing) setEditing(false);\n        else setEditing(true);\n    }\n    if (editing) {\n        viewMode.display = 'none';\n    } else {\n        editMode.display = 'none';\n    }\n    console.log(editing);\n    return (\n        <div>\n            <li>\n                <div className=\"view-task\" style={viewMode}>\n                    <input\n                        type=\"checkbox\"\n                        checked={completed}\n                        onChange={(e) => toggleCompleted(id, e.target.checked)} />\n                    {title}\n                    <MdEdit onClick={() => toggleEditing()} />\n                    <MdDelete onClick={() => deleteTask(id)} />\n                </div>\n                <input\n                    style={editMode}\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => editTask(id, e.target.value)}\n                    onKeyUp={(e) => { if (e.key === 'Enter') setEditing(false) }} />\n            </li>\n        </div>\n    );\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWxC,OAAO,SAASC,QAAQA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,SAAS;EAAEC,eAAe;EAAEC,UAAU;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAE7F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,IAAIc,QAAwB,GAAG,CAAC,CAAC;EACjC,IAAIC,QAAwB,GAAG,CAAC,CAAC;EAEjC,SAASC,aAAaA,CAAA,EAAG;IACrB,IAAIJ,OAAO,EAAEC,UAAU,CAAC,KAAK,CAAC,CAAC,KAC1BA,UAAU,CAAC,IAAI,CAAC;EACzB;EACA,IAAID,OAAO,EAAE;IACTE,QAAQ,CAACG,OAAO,GAAG,MAAM;EAC7B,CAAC,MAAM;IACHF,QAAQ,CAACE,OAAO,GAAG,MAAM;EAC7B;EACAC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EACpB,oBACIT,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAACC,KAAK,EAAER,QAAS;QAAAM,QAAA,gBACvCjB,OAAA;UACIoB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEjB,SAAU;UACnBkB,QAAQ,EAAGC,CAAC,IAAKlB,eAAe,CAACH,EAAE,EAAEqB,CAAC,CAACC,MAAM,CAACH,OAAO;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7DzB,KAAK,eACNH,OAAA,CAACF,MAAM;UAAC+B,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAAC;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1C5B,OAAA,CAACJ,QAAQ;UAACiC,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACJ,EAAE;QAAE;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN5B,OAAA;QACImB,KAAK,EAAEP,QAAS;QAChBQ,IAAI,EAAC,MAAM;QACXU,KAAK,EAAE3B,KAAM;QACbmB,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACL,EAAE,EAAEqB,CAAC,CAACC,MAAM,CAACM,KAAK,CAAE;QAC9CC,OAAO,EAAGR,CAAC,IAAK;UAAE,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,EAAEtB,UAAU,CAAC,KAAK,CAAC;QAAC;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACpB,EAAA,CAtCeP,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}