{"ast":null,"code":"var _jsxFileName = \"/home/taito/dev/task-app/client/src/components/TaskItem.tsx\",\n  _s = $RefreshSig$();\nimport { MdDelete } from 'react-icons/md';\nimport { useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskItem({\n  id,\n  title,\n  completed,\n  toggleCompleted,\n  deleteTask,\n  editTask\n}) {\n  _s();\n  const [editing, setEditing] = useState(false);\n  function toggleEditing() {\n    if (editing) setEditing(false);else setEditing(true);\n  }\n  let viewMode = {};\n  let editMode = {};\n  console.log(editing);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-task\",\n        style: viewMode,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed,\n          onChange: e => toggleCompleted(id, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), title, /*#__PURE__*/_jsxDEV(MdEdit, {\n          onClick: () => toggleEditing()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MdDelete, {\n          onClick: () => deleteTask(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: editMode,\n        type: \"text\",\n        value: title,\n        onChange: e => editTask(id, e.target.value),\n        onKeyUp: e => {\n          if (e.key === 'Enter') setEditing(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskItem, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\");\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["MdDelete","useState","MdEdit","jsxDEV","_jsxDEV","TaskItem","id","title","completed","toggleCompleted","deleteTask","editTask","_s","editing","setEditing","toggleEditing","viewMode","editMode","console","log","children","className","style","type","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onKeyUp","key","_c","$RefreshReg$"],"sources":["/home/taito/dev/task-app/client/src/components/TaskItem.tsx"],"sourcesContent":["import { MdDelete } from 'react-icons/md';\nimport { useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\n\ninterface Props {\n    id: string;\n    title: string;\n    completed: boolean;\n    toggleCompleted: (id: string, completed: boolean) => void;\n    deleteTask: (id: string) => void;\n    editTask: (id: string, newTitle: string) => void;\n}\n\nexport function TaskItem({ id, title, completed, toggleCompleted, deleteTask, editTask }: Props) {\n\n    const [editing, setEditing] = useState(false);\n\n    function toggleEditing() {\n        if (editing) setEditing(false);\n        else setEditing(true);\n    }\n    let viewMode = {};\n    let editMode = {};\n    \n    console.log(editing);\n    return (\n        <div>\n            <li>\n                <div className=\"view-task\" style={viewMode}>\n                    <input\n                        type=\"checkbox\"\n                        checked={completed}\n                        onChange={(e) => toggleCompleted(id, e.target.checked)} />\n                    {title}\n                    <MdEdit onClick={() => toggleEditing()} />\n                    <MdDelete onClick={() => deleteTask(id)} />\n                </div>\n                <input\n                    style={editMode}\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => editTask(id, e.target.value)}\n                    onKeyUp={(e) => { if (e.key === 'Enter') setEditing(false) }} />\n            </li>\n        </div>\n    );\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWxC,OAAO,SAASC,QAAQA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,SAAS;EAAEC,eAAe;EAAEC,UAAU;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAE7F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASc,aAAaA,CAAA,EAAG;IACrB,IAAIF,OAAO,EAAEC,UAAU,CAAC,KAAK,CAAC,CAAC,KAC1BA,UAAU,CAAC,IAAI,CAAC;EACzB;EACA,IAAIE,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,QAAQ,GAAG,CAAC,CAAC;EAEjBC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACpB,oBACIT,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAACC,KAAK,EAAEN,QAAS;QAAAI,QAAA,gBACvChB,OAAA;UACImB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEhB,SAAU;UACnBiB,QAAQ,EAAGC,CAAC,IAAKjB,eAAe,CAACH,EAAE,EAAEoB,CAAC,CAACC,MAAM,CAACH,OAAO;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7DxB,KAAK,eACNH,OAAA,CAACF,MAAM;UAAC8B,OAAO,EAAEA,CAAA,KAAMjB,aAAa,CAAC;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1C3B,OAAA,CAACJ,QAAQ;UAACgC,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACJ,EAAE;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN3B,OAAA;QACIkB,KAAK,EAAEL,QAAS;QAChBM,IAAI,EAAC,MAAM;QACXU,KAAK,EAAE1B,KAAM;QACbkB,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACL,EAAE,EAAEoB,CAAC,CAACC,MAAM,CAACM,KAAK,CAAE;QAC9CC,OAAO,EAAGR,CAAC,IAAK;UAAE,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,EAAErB,UAAU,CAAC,KAAK,CAAC;QAAC;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACnB,EAAA,CAjCeP,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}